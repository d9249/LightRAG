services:
  # ollama:
  #   container_name: ollama
  #   image: ollama/ollama:latest
  #   ports:
  #     - "9622:11434"
  #   volumes:
  #     - ./data/ollama:/root/.ollama
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "ollama", "list"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 20s

  # Qdrant 벡터 데이터베이스 추가
  qdrant:
    container_name: qdrant
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./data/qdrant_storage:/qdrant/storage
    restart: unless-stopped

  # Neo4j 그래프 데이터베이스 추가
  neo4j:
    container_name: neo4j
    image: neo4j:latest
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/aiomaster
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - ./data/neo4j/data:/data
      - ./data/neo4j/logs:/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p aiomaster 'RETURN 1;' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  lightrag:
    container_name: lightrag
    image: ghcr.io/hkuds/lightrag:latest
    build:
      context: .
      dockerfile: dockerfile.lightrag
      tags:
        - ghcr.io/hkuds/lightrag:latest
    ports:
      - "${PORT:-9621}:9621"
    volumes:
      - ./data/rag_storage:/app/data/rag_storage
      - ./data/inputs:/app/data/inputs
      - ./data/tiktoken:/app/data/tiktoken
      - ./.env:/app/.env
    env_file:
      - .env
    environment:
      - TIKTOKEN_CACHE_DIR=/app/data/tiktoken
      - LIGHTRAG_VECTOR_STORAGE=QdrantVectorDBStorage
      - LIGHTRAG_GRAPH_STORAGE=Neo4JStorage
      - QDRANT_URL=http://qdrant:6333
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=aiomaster
    restart: unless-stopped
    depends_on:
      # ollama:
      #   condition: service_started
      qdrant:
        condition: service_started  
      neo4j:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
